server:
  port: 8010
  servlet:
    context-path: /common
## 数据库 配置数据源
spring:
  dubbo:
    server: true
    registry: zookeeper://127.0.0.1:2181?client=curator
    protocol:
     name: dubbo
     serialization: kryo
     optimizer: com.cksmaster.common.dubbo.SerializationOptimizerImpl
    application:
      name: common
  datasource:
    druid:
      name: cks_master
      url: jdbc:mysql://127.0.0.1:3306/cksmaster?useUnicode=true&characterEncoding=utf8&serverTimezone=GMT
      username: root
      password: root
      type: com.alibaba.druid.pool.DruidDataSource
      driver-class-name: com.mysql.jdbc.Driver
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 5
      minIdle: 5
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 校验SQL，Oracle配置 spring.datasource.validationQuery=SELECT 1 FROM DUAL，如果不配validationQuery项，则下面三项配置无用
      validationQuery: SELECT 'x'
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true


      web-stat-filter:
        enabled: true
        profile-enable: true
        url-pattern: /*
        exclusions:


      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: 123456
        url-pattern: /druid/*
        reset-enable: true
        allow: 127.0.0.1

      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
          db-type: mysql
          enabled: true

        slf4j:
          enabled: true

        wall:
          enabled: true
          db-type: mysql
          #对被认为是攻击的SQL进行LOG.error输出
          log-violation: true
          #对被认为是攻击的SQL抛出SQLException
          throw-exception: true
          config:
            alter-table-allow: false
            truncate-allow: false
            drop-table-allow: false
            #是否允许非以上基本语句的其他语句，缺省关闭，通过这个选项就能够屏蔽DDL。
            none-base-statement-allow: false
            #检查UPDATE语句是否无where条件，这是有风险的，但不是SQL注入类型的风险
            update-where-none-check: true
            #SELECT ... INTO OUTFILE 是否允许，这个是mysql注入攻击的常见手段，缺省是禁止的
            select-into-outfile-allow: false
            #是否允许调用Connection.getMetadata方法，这个方法调用会暴露数据库的表信息
            metadata-allow: true

  rabbitmq:
    ####连接地址
    host: 127.0.0.1
    ####端口号
    port: 5672
    ####账号
    username: cks
    ####密码
    password: 123456
    ### 地址
    virtual-host: admin

mybatis:
  mapper-locations: classpath:/mapper/*.xml




#endpoints:
#  mappings:
#    sensitive: false

    # Dubbo 服务消费者配置
#  dubbo:
#    server: true
#    registry: zookeeper://192.168.15.40:2181
#      id: my-registry
#      address: zookeeper://192.168.15.40:2181

#    protocol:
#      id: dubbo
#      name: dubbo
#      port: 21880
#      host: localhost

#    application:
#      id: common
#      name: common
#    registry:
#      protocol: zookeeper
#      address: localhost:2181,192.168.16.170:2181
#    protocol:
#      name: dubbo
#      port: 20880
#      host: localhost
#    scan: com.cksmaster.controller